{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedPage","find","tab","id","className","map","classNames","href","onClick","handleClick","title","content","App","useState","setSelectedTab","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAAAH,GAAG,OACV,oBACE,UAAQ,MAERE,UACEE,IAAW,CAAE,YAAaN,EAAaG,KAAOD,EAAIC,KAJtD,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBL,SAACN,GACfA,EAAIC,KAAOH,EAAaG,IAC1BJ,EAAcG,GAoBaO,CAAYP,IAH7B,SAKGA,EAAIQ,SAVFR,EAAIC,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAaW,cC7CTd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAShB,EAAK,GAAGM,IAAzD,mBAAOL,EAAP,KAAsBgB,EAAtB,KAIMC,EAAclB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYL,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeiB,EAAYZ,GAC3BJ,cAbgB,SAACG,GAAD,OAAcY,EAAeZ,EAAIC,WCbzDa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b5227ac.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedPage = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClick = (tab: Tab) => {\n    if (tab.id !== selectedPage.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={\n                  classNames({ 'is-active': selectedPage.id === tab.id })\n                }\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedPage.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => setSelectedTab(tab.id);\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}